services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env

  redis:
    image: redis:7-alpine
    container_name: redis
    command: /bin/sh -c "redis-server --requirepass $REDIS_PASSWORD"
    hostname: redis
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - ./redis/data:/data
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    hostname: postgres
    # volumes:
    #   - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: api
    hostname: api
    ports:
      - "3000:3000"
    env_file:
      - .env.prod
    depends_on:
      - rabbitmq
      - redis
      - postgres
    command: ["node", "api"]
  mailing:
    build:
      context: .
      dockerfile: apps/services/mailing/Dockerfile
    container_name: mailing
    hostname: mailing
    env_file:
      - .env.prod
    depends_on:
      - rabbitmq
      - redis
      - postgres
    command: ["node", "mailing"]
  userservice:
    build:
      context: .
      dockerfile: apps/services/users/Dockerfile
    container_name: userservice
    hostname: userservice
    env_file:
      - .env.prod
    depends_on:
      - rabbitmq
      - redis
      - postgres
    environment:
      NODE_ENV: production
    restart: unless-stopped
    command: ["node", "userservice"]
